name: The Magic Story Machine
on:
  # schedule:
  #  - cron: 0 0 * * *
  workflow_dispatch:

env:
  END_TEXT: '# The End!'

jobs:
  tell-story:
    name: Tell Magical Story
    runs-on: ubuntu-latest
    steps:
      # First prepare Node.js and checkout the repository, in order to use internal actions in .github/actions.
      # Using GITHUB_TOKEN to be able to push changes and redeploy the GitHub Page later.
      - name: Setup Node.js
        uses: actions/setup-node@v2
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      # Fetch info about the reply with the most likes, for the most recent story tweet.
      - name: Get Top Reply
        id: top-reply
        uses: ./.github/actions/top-reply
        with:
          account-id: ${{ secrets.ACCOUNT_ID }}
          twitter-bearer-token: ${{ secrets.TWITTER_BEARER_TOKEN }}
      
      # Update/create the markdown file for the story.
      - name: Write Story
        env:
          STORY_NUMBER: ${{ steps.top-reply.outputs.story-number }}
          FILE: content/stories/story-${{ steps.top-reply.outputs.story-number }}.md
          TEXT: ${{ steps.top-reply.outputs.text }}
          IMAGE: ${{ steps.top-reply.outputs.image }}
          AUTHOR: ${{ steps.top-reply.outputs.username }}
          ENDED: ${{ steps.top-reply.outputs.text == env.END_TEXT }}
        run: |
          # Add new story part to end of file
          printf "%s\n" "<story-part username=\"$AUTHOR\" image=\"$IMAGE\"><span>\n$TEXT\n</span></story-part>" >> $FILE

          # If new story part is "The End!" then update "ended" attribute in frontmatter header and prepare next story file.
          if $ENDED
          then
            sed -i '0,/ended: false/s//ended: true/' $FILE
            export NEXT_FILE=content/stories/story-$(( $STORY_NUMBER + 1 )).md
            printf "%s\n" "---" >> $NEXT_FILE
            printf "%s\n" "title: Story $STORY_NUMBER" >> $NEXT_FILE
            printf "%s\n" "number: $STORY_NUMBER" >> $NEXT_FILE
            printf "%s\n" "ended: false" >> $NEXT_FILE
            printf "%s\n\n" "---" >> $NEXT_FILE
          fi

          # Commit and push story file
          git config --global user.name github-actions
          git config --global user.email github-actions@github.com
          git add .
          git commit -m "Story $STORY_NUMBER continues."
          git push

      # Publish a new tweet, where people can again share ideas.
      - name: New Tweet
        id: new-tweet
        uses: ./.github/actions/tweet
        with:
          last-username: ${{ steps.top-reply.outputs.username }}
          last-reply-id: ${{ steps.top-reply.outputs.reply-id }}
          story-number: ${{ steps.top-reply.outputs.story-number }}
          the-end: ${{ steps.top-reply.outputs.text == env.END_TEXT }}
          twitter-consumer-key: ${{ secrets.TWITTER_CONSUMER_KEY }}
          twitter-consumer-secret: ${{ secrets.TWITTER_CONSUMER_SECRET }}
          twitter-access-token-key: ${{ secrets.TWITTER_ACCESS_TOKEN_KEY }}
          twitter-access-token-secret: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
          twitter-bearer-token: ${{ secrets.TWITTER_BEARER_TOKEN }}
      
      # Redeploy the GitHub Page with the ID of the new story tweet.
      - name: Update Website
        run: |
          export API_URL=https://api.the-magic-frog.com
          export LATEST_TWEET=${{ steps.new-tweet.outputs.tweet-id }}
          npm ci
          npm run generate
          npm run deploy
        